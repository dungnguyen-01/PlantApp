{"version":3,"file":"js/545.1929732e.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/Repositories/OrganizationRepository.js","webpack://@coreui/coreui-free-vue-admin-template/./src/views/pages/Login.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/views/pages/Login.vue?30a0"],"sourcesContent":["import axios from 'axios'\nconst api = process.env.VUE_APP_MODE + '/organization/'\nimport authHeader from '../services/auth-header'\nclass OrganizationRepository {\n  getAllOrganizations() {\n    return axios.get(api + 'list', { headers: authHeader() })\n  }\n  getAllSelectByUserOrganizations() {\n    return axios.get(api + 'list-user', { headers: authHeader() })\n  }\n  getOrganizations(page) {\n    return axios.get(api + page, { headers: authHeader() })\n  }\n  getOrganizationById(id) {\n    return axios.get(api + id, { headers: authHeader() })\n  }\n  createOrganization(organization) {\n    return axios.post(api, organization, { headers: authHeader() })\n  }\n  updateOrganization(id, organization) {\n    return axios.put(api + id, organization, { headers: authHeader() })\n  }\n  deleteOrganizationById(id) {\n    return axios.get(api + 'delete/' + id, { headers: authHeader() })\n  }\n}\nexport default new OrganizationRepository()\n","<template>\n  <div class=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n    <CContainer>\n      <CRow class=\"justify-content-center\">\n        <CCol :md=\"8\">\n          <CCardGroup>\n            <CCard class=\"p-1\">\n              <CCardBody>\n                <CForm @submit.prevent=\"handleLogin\">\n                  <h1 class=\"text-center\">Login</h1>\n                  <p class=\"text-medium-emphasis\">Sign In to your account</p>\n                  <i class=\"text-danger\">{{ message }}</i>\n                  <CInputGroup class=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon=\"cil-user\" />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email...\"\n                      autocomplete=\"email\"\n                      v-model=\"email\"\n                      type=\"email\"\n                      required\n                    />\n                  </CInputGroup>\n                  <CInputGroup>\n                    <CInputGroupText>\n                      <CIcon icon=\"cil-lock-locked\" />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autocomplete=\"current-password\"\n                      v-model=\"password\"\n                      required\n                    />\n                  </CInputGroup>\n                  <a\n                    color=\"link\"\n                    class=\"px-0 float-end\"\n                    @click=\"forgotPassword()\"\n                    style=\"cursor: pointer\"\n                  >\n                    Forgot password?\n                  </a>\n                  <CRow class=\"mt-5\">\n                    <CCol :md=\"4\">\n                      <CButton color=\"primary\" class=\"px-3 mb-2\" type=\"submit\">\n                        Login\n                      </CButton>\n                    </CCol>\n                    <CCol :md=\"8\" class=\"text-right\">\n                      <CButton\n                        color=\"warning\"\n                        class=\"px-3\"\n                        @click=\"handleLoginWithGoogle()\"\n                      >\n                        Login with <b>Google</b>\n                      </CButton>\n                    </CCol>\n                  </CRow>\n                </CForm>\n              </CCardBody>\n            </CCard>\n            <CCard class=\"text-white bg-primary py-5\">\n              <CCardBody class=\"text-center\">\n                <div>\n                  <h2>Welcome!</h2>\n                  <CButton\n                    color=\"light\"\n                    variant=\"outline\"\n                    class=\"mt-3\"\n                    @click=\"frmRegister()\"\n                  >\n                    Register Now!\n                  </CButton>\n                </div>\n              </CCardBody>\n            </CCard>\n          </CCardGroup>\n        </CCol>\n      </CRow>\n    </CContainer>\n  </div>\n  <CModal ref=\"my-modal\" backdrop=\"static\" :visible=\"xlDemo\">\n    <CModalHeader>\n      <CModalTitle>Chose organization</CModalTitle>\n    </CModalHeader>\n    <CModalBody>\n      <div class=\"mb-5\">\n        <label for=\"createAt\" class=\"form-label text\">Organization:</label>\n        <i class=\"text-danger\">{{ messageORG }}</i>\n        <v-select\n          v-model=\"organizationSelected\"\n          :options=\"options\"\n          label=\"name\"\n          :reduce=\"(name) => name.id\"\n        />\n      </div>\n    </CModalBody>\n    <CModalFooter>\n      <CButton\n        color=\"secondary\"\n        @click=\"\n          () => {\n            xlDemo = false\n          }\n        \"\n      >\n        Close\n      </CButton>\n      <CButton color=\"primary\" @click=\"changeORG()\">Save changes</CButton>\n    </CModalFooter>\n  </CModal>\n  <Loading v-model:active=\"isLoading\" />\n</template>\n\n<script>\nimport UserRepository from '@/Repositories/UserRepository'\nimport OrganizationRepository from '@/Repositories/OrganizationRepository'\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      email: '',\n      password: '',\n      message: '',\n      messageORG: '',\n      organizationSelected: 'Chose organization...',\n      xlDemo: false,\n      isLoading: false,\n      options: [],\n      user: {},\n    }\n  },\n\n  methods: {\n    handleLoginWithGoogle() {\n      this.$gAuth.signIn().then((data) => {\n        const formData = new FormData()\n        formData.append('email', data.getBasicProfile().getEmail())\n        formData.append('fullname', data.getBasicProfile().getName())\n        formData.append('password', data.getBasicProfile().getId())\n        UserRepository.loginWithGoogle(formData).then((resp) => {\n          this.isLoading = true\n          setTimeout(() => {\n            this.isLoading = false\n            if (resp.status == 200) {\n              this.user = resp.data.user\n              if (\n                resp.data.user.organization.name == 'KintoVN' &&\n                resp.data.user.email !== 'info.kintovn@gmail.com'\n              ) {\n                console.log(resp.data.user.email)\n                this.xlDemo = true\n              } else {\n                if (resp.data.accessToken) {\n                  localStorage.setItem('user', JSON.stringify(resp.data))\n                  this.$swal.fire({\n                    title: 'Login successfully!',\n                    text: `Welcome: ${data.getBasicProfile().getName()}`,\n                    icon: 'success',\n                    timer: 1500,\n                  })\n                  setTimeout(() => {\n                    this.$router.push('/')\n                  }, 1500)\n                }\n              }\n            } else {\n              this.$swal.fire('Failed!', 'Login Failed!', 'error')\n            }\n          }, 2000)\n        })\n      })\n    },\n    handleLogin() {\n      this.isLoading = true\n      UserRepository.loginWithEmail({\n        email: this.email,\n        password: this.password,\n      })\n        .then((resp) => {\n          setTimeout(() => {\n            this.isLoading = false\n            if (resp.status == 200) {\n              this.user = resp.data.user\n              if (\n                resp.data.user.organization.name == 'KintoVN' &&\n                resp.data.user.email !== 'info.kintovn@gmail.com'\n              ) {\n                this.xlDemo = true\n              } else {\n                if (resp.data.accessToken) {\n                  localStorage.setItem('user', JSON.stringify(resp.data))\n                  this.$swal.fire({\n                    title: 'Login successfully!',\n                    text: `Welcome: ${resp.data.user.fullname}`,\n                    icon: 'success',\n                    timer: 1500,\n                  })\n                  setTimeout(() => {\n                    this.$router.push('/')\n                  }, 1500)\n                }\n              }\n            }\n          }, 1500)\n        })\n        .catch((error) => {\n          setTimeout(() => {\n            this.isLoading = false\n            this.$swal.fire('Failed!', 'Login Failed!', 'error')\n            this.message = error.response.data.error\n          }, 2000)\n        })\n    },\n    frmRegister() {\n      this.$router.push('/pages/register')\n    },\n    forgotPassword() {\n      this.$router.push('/pages/forgot-password')\n    },\n    getOrganizationRepository() {\n      OrganizationRepository.getAllOrganizations().then((response) => {\n        this.options = response.data\n      })\n    },\n    changeORG() {\n      this.xlDemo = true\n      if (this.organizationSelected == 'Chose organization...') {\n        this.messageORG = 'Please select a organization'\n      } else {\n        this.isLoading = true\n        const formData = new FormData()\n        formData.append('id', this.user.id)\n        formData.append('orgId', this.organizationSelected)\n        UserRepository.updateORG(formData)\n          .then((response) => {\n            this.isLoading = false\n            if (response.status === 200) {\n              this.xlDemo = false\n              this.$swal.fire('Success!', 'Now go to login again!', 'success')\n              this.$router.push('/pages/login')\n            }\n          })\n          .catch((error) => {\n            this.isLoading = false\n            this.$swal.fire('Failed!', 'Please check again!', 'error')\n            this.messageORG = error.response.this.error\n          })\n      }\n    },\n  },\n  created() {\n    this.getOrganizationRepository()\n  },\n  watch: {\n    organizationSelected(newQuestion, oldQuestion) {\n      if (newQuestion != oldQuestion) {\n        if (newQuestion !== 'Chose organization...') {\n          this.organizationSelected = newQuestion\n        }\n      }\n    },\n  },\n}\n</script>\n","import { render } from \"./Login.vue?vue&type=template&id=bf85ab04\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/d/ProjectJava/Kinto-Frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["api","process","OrganizationRepository","getAllOrganizations","axios","headers","authHeader","getAllSelectByUserOrganizations","getOrganizations","page","getOrganizationById","id","createOrganization","organization","updateOrganization","deleteOrganizationById","class","_createElementVNode","for","_createVNode","_component_CContainer","_component_CRow","_component_CCol","md","_component_CCardGroup","_component_CCard","_component_CCardBody","_component_CForm","onSubmit","$options","_hoisted_2","_hoisted_3","_toDisplayString","$data","_component_CInputGroup","_component_CInputGroupText","_component_CIcon","icon","_component_CFormInput","placeholder","autocomplete","$event","type","required","color","onClick","style","_component_CButton","_hoisted_8","variant","_component_CModal","ref","backdrop","visible","_component_CModalHeader","_component_CModalTitle","_component_CModalBody","_hoisted_12","_component_v_select","options","label","reduce","name","_component_CModalFooter","_component_Loading","active","data","email","password","message","messageORG","organizationSelected","xlDemo","isLoading","user","methods","handleLoginWithGoogle","this","$gAuth","signIn","then","formData","FormData","append","getBasicProfile","getEmail","getName","getId","UserRepository","resp","setTimeout","status","console","log","accessToken","localStorage","setItem","JSON","stringify","$swal","fire","title","text","timer","$router","push","handleLogin","fullname","catch","error","response","frmRegister","forgotPassword","getOrganizationRepository","changeORG","created","watch","newQuestion","oldQuestion","__exports__","render"],"sourceRoot":""}