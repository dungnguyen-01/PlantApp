{"version":3,"file":"js/54.d942f0b9.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/Repositories/PlantTypeRepository.js","webpack://@coreui/coreui-free-vue-admin-template/./src/views/plantType/FormPlantType.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/views/plantType/FormPlantType.vue?2dbf"],"sourcesContent":["import axios from 'axios'\nconst api = process.env.VUE_APP_MODE + '/plant-type/'\nimport authHeader from '../services/auth-header'\nclass PlantTypeRepository {\n  getAllPlantTypes(plantType) {\n    return axios.get(api + 'list' + plantType, { headers: authHeader() })\n  }\n  getPlantTypes(page) {\n    return axios.get(api + page, { headers: authHeader() })\n  }\n  getPlantTypeById(id) {\n    return axios.get(api + id, { headers: authHeader() })\n  }\n  createPlantType(plantType) {\n    return axios.post(api, plantType, { headers: authHeader() })\n  }\n  updatePlantType(id, plantType) {\n    return axios.put(api + id, plantType, { headers: authHeader() })\n  }\n  deletePlantTypeById(id) {\n    return axios.get(api + 'delete/' + id, { headers: authHeader() })\n  }\n}\nexport default new PlantTypeRepository()\n","<template>\n  <CRow>\n    <CCol>\n      <CCard>\n        <form\n          @submit.prevent=\"\n            this.$route.params.id == 'null'\n              ? createPlantType()\n              : updatePlantType()\n          \"\n        >\n          <CCardHeader>\n            <CIcon icon=\"cil-drop\" />\n            Form Plant Type\n            <span class=\"float-end text-danger\">{{ message }}</span>\n          </CCardHeader>\n          <CCardBody>\n            <CRow>\n              <div class=\"row mx-md-2\">\n                <div class=\"col-md-6\">\n                  <label for=\"id\" class=\"form-label text\">Id:</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control bg-light\"\n                    placeholder=\"id auto increment...\"\n                    name=\"id\"\n                    readonly\n                    v-model=\"id\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <label for=\"code\" class=\"form-label text\">Code:</label>\n                  <i class=\"text-danger\"> </i>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"enter 3 to 5 characters...\"\n                    name=\"code\"\n                    v-model=\"code\"\n                    required\n                  />\n                  <i class=\"text-danger\">*Enter numbers and alphabets only.</i>\n                </div>\n                <div>\n                  <label for=\"namePlantType\" class=\"form-label text\"\n                    >Name Plant Type:</label\n                  >\n                  <i class=\"text-danger\">{{ namePlantTypeError }}</i>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Name Plant Type...\"\n                    name=\"namePlantType\"\n                    v-model=\"namePlantType\"\n                    required\n                  />\n                </div>\n              </div>\n            </CRow>\n          </CCardBody>\n          <CCardFooter>\n            <div class=\"text-center my-1\">\n              <button\n                class=\"btn btn-outline-info rounded-pill px-4\"\n                title=\"back to list\"\n                @click=\"backToList()\"\n              >\n                <CIcon :icon=\"icon.cilArrowLeft\" size=\"m\" />\n                Back\n              </button>\n              <button\n                class=\"btn btn-outline-primary rounded-pill ms-2 px-4\"\n                title=\"create\"\n                v-show=\"this.$route.params.id == 'null'\"\n                type=\"submit\"\n              >\n                <CIcon :icon=\"icon.cilPen\" size=\"m\" />\n                Create\n              </button>\n              <button\n                class=\"btn btn-outline-success rounded-pill ms-2 px-4\"\n                title=\"update\"\n                v-show=\"this.$route.params.id != 'null'\"\n                type=\"submit\"\n              >\n                <CIcon :icon=\"icon.cilTrash\" size=\"m\" />\n                Update\n              </button>\n              <button\n                class=\"btn btn-outline-warning rounded-pill ms-2 px-4\"\n                title=\"reset\"\n                @click=\"resetForm()\"\n              >\n                <CIcon :icon=\"icon.cilReload\" size=\"m\" />\n                Reset\n              </button>\n            </div>\n          </CCardFooter>\n        </form>\n      </CCard>\n    </CCol>\n  </CRow>\n  <Loading v-model:active=\"isLoading\" />\n</template>\n<script>\nimport PlantTypeRepository from '@/Repositories/PlantTypeRepository'\nimport * as icon from '@coreui/icons'\nexport default {\n  name: 'FormLoaction',\n  data() {\n    return {\n      id: '',\n      namePlantType: '',\n      namePlantTypeError: '',\n      code: '',\n      message: '',\n      isLoading: false,\n      organization: this.$store.state.auth.user.user.organization,\n    }\n  },\n  computed: {\n    plantTypeId() {\n      return this.$route.params.id\n    },\n  },\n  methods: {\n    getDetailPlantType() {\n      if (this.plantTypeId !== 'null') {\n        this.isLoading = true\n        PlantTypeRepository.getPlantTypeById(this.plantTypeId)\n          .then((response) => {\n            if (response.status == 200) {\n              this.isLoading = false\n              this.id = response.data.id\n              this.namePlantType = response.data.namePlantType\n              this.code = response.data.code\n            }\n          })\n          .catch(() => {\n            this.isLoading = false\n            this.$swal.fire(\n              'Warning!',\n              'The system is experiencing an error, please reload the page',\n              'warning',\n            )\n          })\n      }\n    },\n    createPlantType() {\n      if (\n        this.onlyLetters(this.code) == false ||\n        this.code.length <= 2 ||\n        this.code.length >= 6\n      ) {\n        this.message =\n          'enter 3 to 5 characters and numbers (A-Z, 0-9) without spaces and special characters.'\n      } else {\n        this.isLoading = true\n        PlantTypeRepository.createPlantType({\n          namePlantType: this.namePlantType,\n          organization: this.organization,\n          code: this.code.toUpperCase(),\n        })\n          .then((res) => {\n            if (res.status == 200) {\n              this.isLoading = false\n              this.$swal.fire('Success!', 'Create successfully!', 'success')\n              this.$router.push('/plant_type/list-plant_type')\n            }\n          })\n          .catch((error) => {\n            this.isLoading = false\n            this.$swal.fire('Failed!', 'Please check again!', 'error')\n            this.message = error.response.data.error\n          })\n      }\n    },\n    updatePlantType() {\n      if (\n        this.onlyLetters(this.code) == false ||\n        this.code.length <= 2 ||\n        this.code.length >= 6\n      ) {\n        this.message =\n          'Enter 3 to 5 characters and numbers (A-Z, 0-9) without spaces and special characters.'\n      } else {\n        this.isLoading = true\n        PlantTypeRepository.updatePlantType(this.id, {\n          id: this.id,\n          namePlantType: this.namePlantType,\n          organization: this.organization,\n          code: this.code.toUpperCase(),\n        })\n          .then((res) => {\n            if (res.status == 200) {\n              this.isLoading = false\n              this.$swal.fire('Success!', 'Update successfully!', 'success')\n              this.$router.push('/plant_type/list-plant_type')\n            }\n          })\n          .catch((error) => {\n            this.isLoading = false\n            this.$swal.fire('Failed!', 'Please check again!', 'error')\n            this.message = error.response.data.error\n          })\n      }\n    },\n    backToList() {\n      this.$router.push('/plant_type/list-plant_type')\n    },\n    resetForm() {\n      this.$router.push('/plant_type/form-plant_type/null')\n      this.id = ''\n      this.namePlantType = ''\n      this.message = ''\n    },\n    onlyLetters(str) {\n      return /^[A-Z0-9]+$/.test(str)\n    },\n  },\n  setup() {\n    return {\n      icon,\n    }\n  },\n  created() {\n    this.getDetailPlantType()\n  },\n}\n</script>\n","import { render } from \"./FormPlantType.vue?vue&type=template&id=bea6d7e2\"\nimport script from \"./FormPlantType.vue?vue&type=script&lang=js\"\nexport * from \"./FormPlantType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/d/ProjectJava/Kinto-Frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["api","process","PlantTypeRepository","getAllPlantTypes","plantType","axios","headers","authHeader","getPlantTypes","page","getPlantTypeById","id","createPlantType","updatePlantType","deletePlantTypeById","class","_createElementVNode","for","title","type","_createVNode","_component_CRow","_component_CCol","_component_CCard","onSubmit","$route","params","$options","_component_CCardHeader","_component_CIcon","icon","_toDisplayString","$data","_component_CCardBody","_hoisted_5","placeholder","name","readonly","$event","_hoisted_7","_hoisted_8","required","_hoisted_9","_hoisted_10","_component_CCardFooter","onClick","$setup","cilArrowLeft","size","cilPen","cilTrash","cilReload","_component_Loading","active","data","namePlantType","namePlantTypeError","code","message","isLoading","organization","this","$store","state","auth","user","computed","plantTypeId","methods","getDetailPlantType","then","response","status","catch","$swal","fire","onlyLetters","length","toUpperCase","res","$router","push","error","backToList","resetForm","str","test","setup","created","__exports__","render"],"sourceRoot":""}