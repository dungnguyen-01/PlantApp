{"version":3,"file":"js/514.516406c7.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/Repositories/OrganizationRepository.js","webpack://@coreui/coreui-free-vue-admin-template/./src/views/users/FormUser.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/Repositories/RoleRepository.js","webpack://@coreui/coreui-free-vue-admin-template/./src/views/users/FormUser.vue?2f44"],"sourcesContent":["import axios from 'axios'\nconst api = process.env.VUE_APP_MODE + '/organization/'\nimport authHeader from '../services/auth-header'\nclass OrganizationRepository {\n  getAllOrganizations() {\n    return axios.get(api + 'list', { headers: authHeader() })\n  }\n  getAllSelectByUserOrganizations() {\n    return axios.get(api + 'list-user', { headers: authHeader() })\n  }\n  getOrganizations(page) {\n    return axios.get(api + page, { headers: authHeader() })\n  }\n  getOrganizationById(id) {\n    return axios.get(api + id, { headers: authHeader() })\n  }\n  createOrganization(organization) {\n    return axios.post(api, organization, { headers: authHeader() })\n  }\n  updateOrganization(id, organization) {\n    return axios.put(api + id, organization, { headers: authHeader() })\n  }\n  deleteOrganizationById(id) {\n    return axios.get(api + 'delete/' + id, { headers: authHeader() })\n  }\n}\nexport default new OrganizationRepository()\n","<template>\n  <CRow>\n    <CCol>\n      <CCard>\n        <form\n          @submit.prevent=\"\n            this.$route.params.id == 'null' ? createUser() : updateUser()\n          \"\n        >\n          <CCardHeader>\n            <CIcon icon=\"cil-drop\" />\n            Form User\n            <span class=\"float-end text-danger\">{{ message }}</span>\n          </CCardHeader>\n          <CCardBody>\n            <CRow>\n              <div class=\"row mx-md-2\">\n                <div class=\"col-md-6\">\n                  <label for=\"id\" class=\"form-label text\">Id:</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control bg-light\"\n                    placeholder=\"id auto increment...\"\n                    name=\"id\"\n                    readonly\n                    v-model=\"id\"\n                  />\n                  <label for=\"fullname\" class=\"form-label text\"\n                    >Fullname:</label\n                  >\n                  <i class=\"text-danger\">{{ fullnameError }}</i>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"fullname...\"\n                    name=\"fullname\"\n                    v-model=\"fullname\"\n                    required\n                  />\n                  <label for=\"email\" class=\"form-label text\">Email:</label>\n                  <i class=\"text-danger\">{{ emailError }}</i>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    placeholder=\"email...\"\n                    name=\"email\"\n                    v-model=\"email\"\n                    :readonly=\"this.$route.params.id != 'null'\"\n                    required\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <label for=\"password\" class=\"form-label text\"\n                    >Password:</label\n                  >\n                  <i class=\"text-danger\">{{ passwordError }}</i>\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    placeholder=\"password...\"\n                    name=\"password\"\n                    v-model=\"password\"\n                    :required=\"this.$route.params.id == 'null'\"\n                  />\n                  <label for=\"confirmPassword\" class=\"form-label text\"\n                    >Confirm Password:</label\n                  >\n                  <i class=\"text-danger\">{{ confirmPasswordError }}</i>\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    placeholder=\"confirm password...\"\n                    name=\"confirmPassword\"\n                    v-model=\"confirmPassword\"\n                    :required=\"this.$route.params.id == 'null'\"\n                  />\n                  <label for=\"createAt\" class=\"form-label text\"\n                    >Organization:</label\n                  >\n                  <i class=\"text-danger\">{{ organizationError }}</i>\n                  <v-select\n                    v-model=\"organizationSelected\"\n                    :options=\"options\"\n                    label=\"name\"\n                    :reduce=\"(name) => name.id\"\n                  />\n                </div>\n                <label for=\"createAt\" class=\"form-label text\">Role:</label>\n                <div class=\"form-control d-flex\">\n                  <div\n                    class=\"form-check form-switch me-3\"\n                    v-for=\"(role, index) in roles\"\n                    :key=\"index\"\n                    :hidden=\"user.email == 'info.kintovn@gmail.com'\"\n                  >\n                    <input\n                      name=\"role\"\n                      class=\"form-check-input\"\n                      type=\"radio\"\n                      :value=\"role.id\"\n                      :checked=\"\n                        role.id == vCheck ? role.id == vCheck : index == 2\n                      \"\n                      :v-model=\"vCheck\"\n                      @change=\"getValueRole($event)\"\n                    />\n                    <label class=\"form-check-label\" for=\"{{role.id}}\">{{\n                      role.roleName\n                    }}</label>\n                  </div>\n                  <i>{{ role.roleName }}</i>\n                </div>\n              </div>\n            </CRow>\n          </CCardBody>\n          <CCardFooter>\n            <div class=\"text-center my-1\">\n              <button\n                class=\"btn btn-outline-info rounded-pill px-4\"\n                title=\"back to list\"\n                @click=\"backToList()\"\n              >\n                <CIcon :icon=\"icon.cilArrowLeft\" size=\"m\" />\n                Back\n              </button>\n              <button\n                class=\"btn btn-outline-primary rounded-pill ms-2 px-4\"\n                title=\"create\"\n                v-show=\"this.$route.params.id == 'null'\"\n                type=\"submit\"\n              >\n                <CIcon :icon=\"icon.cilPen\" size=\"m\" />\n                Create\n              </button>\n              <button\n                class=\"btn btn-outline-success rounded-pill ms-2 px-4\"\n                title=\"update\"\n                v-show=\"this.$route.params.id != 'null'\"\n                type=\"submit\"\n              >\n                <CIcon :icon=\"icon.cilTrash\" size=\"m\" />\n                Update\n              </button>\n              <button\n                class=\"btn btn-outline-warning rounded-pill ms-2 px-4\"\n                title=\"reset\"\n                @click=\"resetForm()\"\n              >\n                <CIcon :icon=\"icon.cilReload\" size=\"m\" />\n                Reset\n              </button>\n            </div>\n          </CCardFooter>\n        </form>\n      </CCard>\n    </CCol>\n  </CRow>\n  <Loading v-model:active=\"isLoading\" />\n</template>\n<script>\nimport UserRepository from '@/Repositories/UserRepository'\nimport RoleRepository from '@/Repositories/RoleRepository'\nimport OrganizationRepository from '@/Repositories/OrganizationRepository'\nimport * as icon from '@coreui/icons'\n\nexport default {\n  name: 'FormUser',\n  data() {\n    return {\n      id: '',\n      fullname: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      createAt: '',\n      updateAt: '',\n      message: '',\n      vCheck: '',\n      organizationSelected: 'Chose organization...',\n      isLoading: false,\n\n      emailError: '',\n      fullnameError: '',\n      passwordError: '',\n      confirmPasswordError: '',\n      organizationError: '',\n      organization: {},\n      user: {},\n      role: {},\n      roles: [],\n      options: [],\n    }\n  },\n  computed: {\n    userId() {\n      return this.$route.params.id\n    },\n  },\n  methods: {\n    getUserById() {\n      if (this.userId !== 'null') {\n        this.isLoading = true\n        UserRepository.getUserById(this.userId)\n          .then((response) => {\n            if (response.status == 200) {\n              this.isLoading = false\n              this.fullname = response.data.fullname\n              this.email = response.data.email\n              this.vCheck = response.data.role.id\n              this.organizationSelected = response.data.organization.id\n              this.user = response.data\n\n              this.organization = response.data.organization\n            }\n          })\n          .catch(() => {\n            this.isLoading = false\n            this.$swal.fire(\n              'Warning!',\n              'The system is experiencing an error, please reload the page',\n              'warning',\n            )\n          })\n      }\n    },\n    getRoles() {\n      RoleRepository.getRoles().then((res) => {\n        this.roles = res.data\n        this.roles.forEach((role) => (this.vCheck = role.id))\n      })\n    },\n    getOrganizationRepository() {\n      OrganizationRepository.getAllSelectByUserOrganizations().then(\n        (response) => {\n          this.options = response.data\n        },\n      )\n    },\n    createUser() {\n      if (this.organizationSelected == 'Chose organization...') {\n        this.message = 'Please fix the errors below.'\n        this.organizationError = ' Please select a organization'\n      } else if (this.password != this.confirmPassword) {\n        this.confirmPasswordError = ' password & confirm password in the same!'\n        this.passwordError = ' password & confirm password in the same!'\n        this.emailError = ''\n        this.fullnameError = ''\n        this.organizationError = ''\n      } else {\n        this.isLoading = true\n        UserRepository.createUser({\n          fullname: this.fullname,\n          password: this.password,\n          email: this.email,\n          organization: this.organization,\n          role: this.role,\n        })\n          .then((response) => {\n            if (response.status == 200) {\n              this.isLoading = false\n              this.$swal.fire('Success!', 'Create successfully!', 'success')\n              this.$router.push('/user/list-user')\n            }\n          })\n          .catch((error) => {\n            this.isLoading = false\n            this.$swal.fire('Failed!', 'Please check again!', 'error')\n            if (error.response.data.error == this.email + ' already exists') {\n              this.message = error.response.data.error\n            } else {\n              this.message = 'The system is crashing, please try again later'\n            }\n          })\n      }\n    },\n    updateUser() {\n      if (\n        this.fullname == '' ||\n        this.organizationSelected == 'Chose organization...' ||\n        this.email == ''\n      ) {\n        if (this.organizationSelected == 'Chose organization...') {\n          this.organizationError = ' Please select a organization'\n        } else this.organizationError = ''\n        if (this.fullname == '') {\n          this.fullnameError = 'Fullname cannot be null!'\n        } else this.fullnameError = ''\n        if (this.email == '') {\n          this.emailError = 'Email cannot be null!'\n        } else this.emailError = ''\n      } else {\n        this.isLoading = true\n        console.log(this.organization)\n        UserRepository.updateUser(this.userId, {\n          fullname: this.fullname,\n          email: this.email,\n          organization: this.organization,\n          role: this.role,\n        })\n          .then((res) => {\n            if (res.status == 200) {\n              this.isLoading = false\n              this.$swal.fire('Success!', 'Update successfully!', 'success')\n              this.$router.push('/user/list-user')\n            }\n          })\n          .catch((error) => {\n            this.isLoading = false\n            this.$swal.fire('Failed!', 'Please check again!', 'error')\n            if (error.response.data.error == this.email + ' already exists') {\n              this.message = error.response.data.error\n            } else {\n              this.message = 'The system is crashing, please try again later'\n            }\n          })\n      }\n    },\n    getValueRole(event) {\n      this.vCheck = event.target.value\n      RoleRepository.getRoleById(this.vCheck).then((resp) => {\n        this.role = resp.data\n      })\n    },\n    getValueRoleById() {\n      RoleRepository.getRoleById(this.vCheck).then((resp) => {\n        this.role = resp.data\n      })\n    },\n    getValueOrganization(id) {\n      OrganizationRepository.getOrganizationById(id).then((response) => {\n        this.organization = response.data\n      })\n    },\n    resetForm() {\n      this.$router.push('/user/form-user/null')\n      this.id = ''\n      this.fullname = ''\n      this.email = ''\n      this.password = ''\n      this.confirmPassword = ''\n      this.createAt = ''\n      this.updateAt = ''\n      this.message = ''\n      this.organizationSelected = 'Chose organization...'\n      this.emailError = ''\n      this.fullnameError = ''\n      this.passwordError = ''\n      this.confirmPasswordError = ''\n      this.organizationError = ''\n      if (this.$route.params.id == 'null') window.location.reload()\n    },\n    backToList() {\n      this.$router.push('/user/list-User')\n    },\n  },\n  setup() {\n    return {\n      icon,\n    }\n  },\n  watch: {\n    vCheck(newQuestion, oldQuestion) {\n      if (oldQuestion != newQuestion) {\n        this.getValueRoleById()\n      }\n    },\n    organizationSelected(newQuestion, oldQuestion) {\n      if (oldQuestion != newQuestion) {\n        this.getValueOrganization(newQuestion)\n      }\n    },\n  },\n  created() {\n    //this.getDetailUser()\n    this.getRoles()\n    this.getOrganizationRepository()\n    this.getUserById()\n  },\n  mounted() {\n    this.vCheck\n  },\n}\n</script>\n","import axios from 'axios'\nconst api = process.env.VUE_APP_MODE + '/role/'\nimport authHeader from '../services/auth-header'\nclass RoleRepository {\n  getRoles() {\n    return axios.get(api + 'list', { headers: authHeader() })\n  }\n  getRoleById(id) {\n    return axios.get(api + id, { headers: authHeader() })\n  }\n}\nexport default new RoleRepository()\n","import { render } from \"./FormUser.vue?vue&type=template&id=627336b4\"\nimport script from \"./FormUser.vue?vue&type=script&lang=js\"\nexport * from \"./FormUser.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/d/ProjectJava/Kinto-Frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["api","process","OrganizationRepository","getAllOrganizations","axios","headers","authHeader","getAllSelectByUserOrganizations","getOrganizations","page","getOrganizationById","id","createOrganization","organization","updateOrganization","deleteOrganizationById","class","_createElementVNode","for","title","type","_createVNode","_component_CRow","_component_CCol","_component_CCard","onSubmit","$route","params","$options","_component_CCardHeader","_component_CIcon","icon","_toDisplayString","$data","_component_CCardBody","_hoisted_5","placeholder","name","readonly","$event","_hoisted_6","required","_hoisted_8","_hoisted_12","_hoisted_15","_hoisted_18","_component_v_select","options","label","reduce","_hoisted_20","_createElementBlock","_Fragment","_renderList","role","index","key","hidden","email","value","checked","onChange","roleName","_component_CCardFooter","onClick","$setup","cilArrowLeft","size","cilPen","cilTrash","cilReload","_component_Loading","active","RoleRepository","getRoles","getRoleById","data","fullname","password","confirmPassword","createAt","updateAt","message","vCheck","organizationSelected","isLoading","emailError","fullnameError","passwordError","confirmPasswordError","organizationError","user","roles","computed","userId","this","methods","getUserById","UserRepository","then","response","status","catch","$swal","fire","res","forEach","getOrganizationRepository","createUser","$router","push","error","updateUser","console","log","getValueRole","event","target","resp","getValueRoleById","getValueOrganization","resetForm","window","location","reload","backToList","setup","watch","newQuestion","oldQuestion","created","mounted","__exports__","render"],"sourceRoot":""}