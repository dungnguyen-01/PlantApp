{"version":3,"file":"js/438.a934fc0b.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/Repositories/PlantTypeRepository.js","webpack://@coreui/coreui-free-vue-admin-template/./src/views/plantType/DetailPlantType.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/views/plantType/DetailPlantType.vue?0e01"],"sourcesContent":["import axios from 'axios'\nconst api = process.env.VUE_APP_MODE + '/plant-type/'\nimport authHeader from '../services/auth-header'\nclass PlantTypeRepository {\n  getAllPlantTypes(plantType) {\n    return axios.get(api + 'list' + plantType, { headers: authHeader() })\n  }\n  getPlantTypes(page) {\n    return axios.get(api + page, { headers: authHeader() })\n  }\n  getPlantTypeById(id) {\n    return axios.get(api + id, { headers: authHeader() })\n  }\n  createPlantType(plantType) {\n    return axios.post(api, plantType, { headers: authHeader() })\n  }\n  updatePlantType(id, plantType) {\n    return axios.put(api + id, plantType, { headers: authHeader() })\n  }\n  deletePlantTypeById(id) {\n    return axios.get(api + 'delete/' + id, { headers: authHeader() })\n  }\n}\nexport default new PlantTypeRepository()\n","<template>\n  <CRow>\n    <CCol>\n      <CCard>\n        <CCardHeader> <CIcon icon=\"cil-drop\" /> Detail Plant Type </CCardHeader>\n        <CCardBody>\n          <CRow>\n            <labe class=\"form-label text\">- Id: {{ plantTypeId }}</labe>\n            <labe class=\"form-label text\">- Code: {{ code }}</labe>\n            <labe class=\"form-label text\"\n              >- Name Plant Type: {{ namePlantType }}</labe\n            >\n            <labe class=\"form-label text\"\n              >- Date create: {{ this.$formatDate.formatDate(createAt) }}</labe\n            >\n            <labe class=\"form-label text\"\n              >- Date update: {{ this.$formatDate.formatDate(updateAt) }}</labe\n            >\n            <hr />\n            <label>- Organization: {{ org }}</label>\n          </CRow>\n        </CCardBody>\n        <CCardFooter>\n          <div>\n            <button\n              type=\"button\"\n              class=\"btn btn-info rounded-pill mx-2 px-4\"\n              title=\"detail\"\n              @click=\"backToList()\"\n            >\n              <CIcon :icon=\"icon.cilMenu\" size=\"m\" />\n              Back to list\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-warning rounded-pill mx-2 px-4\"\n              title=\"edit\"\n              @click=\"editPlantType(plantTypeId)\"\n              v-show=\"role.roleName == 'Admin' || role.roleName == 'Editor'\"\n            >\n              <CIcon :icon=\"icon.cilPen\" size=\"m\" />\n              Edit\n            </button>\n          </div>\n        </CCardFooter>\n      </CCard>\n    </CCol>\n  </CRow>\n  <Loading v-model:active=\"isLoading\" />\n</template>\n<script>\nimport PlantTypeRepository from '@/Repositories/PlantTypeRepository'\nimport * as icon from '@coreui/icons'\nexport default {\n  name: 'DetailPlantType',\n  data() {\n    return {\n      plantTypeId: '',\n      role: this.$store.state.auth.user.user.role,\n      namePlantType: '',\n      code: '',\n      createAt: '',\n      updateAt: '',\n      isLoading: true,\n      org: '',\n    }\n  },\n  computed: {\n    id() {\n      return this.$route.params.id\n    },\n  },\n  methods: {\n    getDetailPlantType() {\n      PlantTypeRepository.getPlantTypeById(this.id)\n        .then((response) => {\n          if (response.status === 200) {\n            this.isLoading = false\n            this.plantTypeId = response.data.id\n            this.namePlantType = response.data.namePlantType\n            this.code = response.data.code\n            this.org = response.data.organization.name\n            this.createAt = response.data.createAt\n            this.updateAt = response.data.updateAt\n          }\n        })\n        .catch(() => {\n          this.isLoading = false\n          this.$swal.fire(\n            'Warning!',\n            'The system is experiencing an error, please reload the page',\n            'warning',\n          )\n        })\n    },\n    backToList() {\n      this.$router.push('/plant_type/list-plant_type')\n    },\n    editPlantType(id) {\n      this.$router.push(`/plant_type/form-plant_type/${id}`)\n    },\n  },\n  created() {\n    this.getDetailPlantType()\n  },\n  setup() {\n    return {\n      icon,\n    }\n  },\n}\n</script>\n","import { render } from \"./DetailPlantType.vue?vue&type=template&id=66061be7\"\nimport script from \"./DetailPlantType.vue?vue&type=script&lang=js\"\nexport * from \"./DetailPlantType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/d/ProjectJava/Kinto-Frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["api","process","PlantTypeRepository","getAllPlantTypes","plantType","axios","headers","authHeader","getPlantTypes","page","getPlantTypeById","id","createPlantType","updatePlantType","deletePlantTypeById","_createElementVNode","_createVNode","_component_CRow","_component_CCol","_component_CCard","_component_CCardHeader","_component_CIcon","icon","_component_CCardBody","_component_labe","class","_toDisplayString","$data","$formatDate","formatDate","_hoisted_2","_component_CCardFooter","type","title","onClick","$options","$setup","cilMenu","size","cilPen","roleName","_component_Loading","active","$event","name","data","plantTypeId","role","this","$store","state","auth","user","namePlantType","code","createAt","updateAt","isLoading","org","computed","$route","params","methods","getDetailPlantType","then","response","status","organization","catch","$swal","fire","backToList","$router","push","editPlantType","created","setup","__exports__","render"],"sourceRoot":""}